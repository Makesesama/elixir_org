name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Test on OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include:
          # Latest versions
          - otp: '27.0'
            elixir: '1.18.4'
            check_formatted: true
            check_warnings: true
          # Previous version support
          - otp: '26.0'
            elixir: '1.17.3'
          
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        otp-version: ${{matrix.otp}}
        elixir-version: ${{matrix.elixir}}
    
    - name: Restore dependencies cache
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ matrix.otp }}-${{ matrix.elixir }}-
    
    - name: Install dependencies
      run: mix deps.get
    
    - name: Check formatting
      run: mix format --check-formatted
      if: matrix.check_formatted
    
    - name: Compile with warnings as errors
      run: mix compile --warnings-as-errors
      if: matrix.check_warnings
      
    - name: Compile
      run: mix compile
      if: '!matrix.check_warnings'
    
    - name: Run tests
      run: mix test

  dialyzer:
    name: Dialyzer
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        otp-version: '27.0'
        elixir-version: '1.18.4'
    
    - name: Restore dependencies cache
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-dialyzer-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-dialyzer-
    
    - name: Install dependencies
      run: mix deps.get
    
    - name: Restore PLT cache
      uses: actions/cache@v4
      id: plt_cache
      with:
        path: priv/plts
        key: ${{ runner.os }}-plt-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-plt-
    
    - name: Create PLTs
      if: steps.plt_cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p priv/plts
        mix dialyzer --plt
    
    - name: Run dialyzer
      run: mix dialyzer --format github

  docs:
    name: Generate Documentation
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        otp-version: '27.0'
        elixir-version: '1.18.4'
    
    - name: Restore dependencies cache
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-docs-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-docs-
    
    - name: Install dependencies
      run: mix deps.get
    
    - name: Generate docs
      run: mix docs
    
    - name: Check docs were generated
      run: test -d doc
